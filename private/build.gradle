buildscript {
    ext.kotlin_version = '1.6.10'
    ext.jackson_version = '2.13.1'
    ext.springVersion = '2.7.6'
    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
    id "org.jetbrains.kotlin.plugin.spring" version "${kotlin_version}"
    id 'org.jetbrains.kotlin.plugin.serialization' version "${kotlin_version}"
    id 'org.springframework.boot' version "${springVersion}"
    id "idea"
    id "java"
    id 'maven-publish'
    id "io.spring.dependency-management" version "1.1.0"
    id "org.springframework.boot.experimental.thin-launcher" version "1.0.28.RELEASE"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs './jardir'
    }
}

dependencies {
	api project(':googlesheet')
    api project(":framely")
    api project(":native")
    api project(":chatwoot")
    api "io.opencui.channel:google:1.0-SNAPSHOT"
    api "io.opencui.channel:meta:1.0-SNAPSHOT"
    api "io.opencui.dispatcher:spring:1.0-SNAPSHOT"
    api('io.opencui:core:1.1-SNAPSHOT') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"
    implementation "org.springframework.session:spring-session-core:2.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-compiler"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation "com.fasterxml.jackson.core:jackson-core:${jackson_version}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jackson_version}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jackson_version}"
    implementation "redis.clients:jedis:3.2.0"
}

if (project.hasProperty('projVersion')) {
  project.version = project.projVersion
} else {
  project.version = '1.0-SNAPSHOT'
}

import java.util.regex.Matcher

task fixPom {
    doLast {
        File file = new File("$buildDir/resources/main/META-INF/maven/${project.group}/${project.name}/pom.xml")
        def text = file.text
        def pattern = "(?s)(<dependencyManagement>.+?<dependencies>)(.+?)(</dependencies>.+?</dependencyManagement>)"
        Matcher matcher = text =~ pattern
        if (matcher.find()) {
            text = text.replaceFirst(pattern, "")
            def firstDeps = matcher.group(2)
            text = text.replaceFirst(pattern, '$1$2' + firstDeps + '$3')
        }
        def pattern01 = "(?s)(<dependency>)(.+?)(${project.name})(.+?)(</dependency>)"
        Matcher matcher01 = text =~ pattern01
        while( matcher01.find()) {
            text = text.replaceFirst(pattern01, "")
        }
        file.write(text)
    }
}

thinPom.finalizedBy fixPom

bootJar {
    mainClass = 'io.framely.dispatcher.DispatchService'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

group 'io.framelydeploy'

build {
	dependsOn ":googlesheet:jar"
    dependsOn ":framely:jar"
    dependsOn ":native:jar"
    dependsOn ":chatwoot:jar"
}
