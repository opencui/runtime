buildscript {
    ext.kotlin_version = '1.6.10'
    ext.spring_boot_version = '2.1.0.RELEASE'

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.10"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'org.springframework.boot' version "${springVersion}"
    id "idea"
    id "java"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'com.github.johnrengelman.shadow'


sourceCompatibility = '11'
targetCompatibility = '11'
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

// disable spring boot jar task
bootJar {
    enabled(false)
}

// enable gradle jar task
jar {
    enabled(true)
}

repositories {
    maven { url 'https://repository.jboss.org/nexus/content/groups/public/' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-plugin/' }
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs './libs'
    }
}

dependencies {
    implementation enforcedPlatform("${springGroupId}:${springArtifactId}:${springVersion}")
    compileOnly 'org.projectlombok:lombok:1.18.24'
    implementation project(':core')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-compiler"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation "com.stripe:stripe-java:4.2.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}


tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}
